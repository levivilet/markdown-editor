name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18.19.0"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: npm ci
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - name: Build
        run: npm run build
      - name: Upload result
        uses: actions/upload-artifact@v2
        with:
          name: markdown-editor-amd64.deb
          path: out/make/deb/x64/markdown-editor_1.0.0_amd64.deb
      - name: Rename Electron App (deb, x64)
        if: matrix.os == 'ubuntu-22.04'
        shell: bash
        run: |
          staging="markdown-editor-${{ needs.create-release.outputs.rg_version }}_amd64.deb"
          mv "out/make/deb/x64/markdown-editor_1.0.0_amd64.deb" "$staging"
          echo "ASSET_DEB_X64=$staging" >> $GITHUB_ENV
      - name: Release Electron App (deb, x64)
        uses: actions/upload-release-asset@v1.0.1
        if: matrix.os == 'ubuntu-22.04'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_DEB_X64 }}
          asset_name: ${{ env.ASSET_DEB_X64 }}
